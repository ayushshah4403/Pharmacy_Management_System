<-- CREATING TABLES AND INSERTING VALUES -->

CREATE TABLE CUSTOMER (C_ID NUMBER PRIMARY KEY, C_NAME VARCHAR2(30), CONTACT_NO NUMBER(10), C_CITY VARCHAR2(20))
INSERT ALL 
INTO CUSTOMER VALUES (001, 'KISHAN', 9638527410, 'VRINDAVAN')
INTO CUSTOMER VALUES (002, 'RAM', 9287552710, 'AYODHYA')
INTO CUSTOMER VALUES (003, 'VISHNU', 9266524710, 'DWARKA')
INTO CUSTOMER VALUES (004, 'ANIRUDH', 7456685545, 'MATHURA')
SELECT * FROM DUAL

CREATE TABLE DEALER (D_ID NUMBER(5) PRIMARY KEY, D_NAME VARCHAR2(30), D_CONTACT NUMBER(10), D_ADDRESS VARCHAR2(30))
INSERT ALL 
INTO DEALER VALUES (101, 'SUN PHARMA', 8638527410, 'AHMEDABAD')
INTO DEALER VALUES (102, 'PFIZER', 9487552710, 'MUMBAI')
INTO DEALER VALUES (103, 'CIPLA', 9247524710, 'PUNE')
INTO DEALER VALUES (104, 'CADILA', 996685545, 'JAIPUR')
SELECT * FROM DUAL

CREATE TABLE PRODUCTS (P_ID NUMBER(4) PRIMARY KEY, P_NAME VARCHAR2(20), PRICE NUMBER(4), EXPIRY_DATE DATE, QUANTITY NUMBER(5)) 
INSERT ALL
INTO PRODUCTS VALUES(1001, 'DOLO 650', 30, '23-AUG-25', 350)
INTO PRODUCTS VALUES(1002, 'DOXY', 20, '23-SEP-24', 150)
INTO PRODUCTS VALUES(1003, 'METACIN', 35, '07-JUN-24', 200)
INTO PRODUCTS VALUES(1004, 'CIPLOX', 45, '19-JAN-23', 225)
SELECT * FROM DUAL

CREATE TABLE WORKERS (W_ID NUMBER(5) PRIMARY KEY, W_NAME VARCHAR2(20), SALARY NUMBER(6))
INSERT ALL
INTO WORKERS VALUES (10001, 'ROHIT', 30000)
INTO WORKERS VALUES (10002, 'MANAV', 18000)
INTO WORKERS VALUES (10003, 'JAYESH', 25000)
INTO WORKERS VALUES (10004, 'KRISH', 32000)
SELECT * FROM DUAL


<-- PL/ SQL BLOCKS -->

<-- CREATING FUNCTION -->

CREATE FUNCTION CHANGE_QUANTITY(P_QUANTITY NUMBER) RETURN
NUMBER IS
BEGIN
RETURN P_QUANTITY - 10;
END;

<-- CALLING FUNCTION -->

DECLARE
P_NO NUMBER :=:ENTER_PRODUCT_ID;
P_QUANTITY NUMBER;
A1 NUMBER;
BEGIN
SELECT P_ID INTO A1 FROM PRODUCTS WHERE P_ID = P_NO;
IF (A1 = P_NO) THEN
 SELECT QUANTITY INTO P_QUANTITY FROM PRODUCTS WHERE P_ID = P_NO;
 P_QUANTITY := CHANGE_QUANTITY(P_QUANTITY);
 UPDATE PRODUCTS SET QUANTITY = P_QUANTITY WHERE P_ID = P_NO;
ELSE
 DBMS_OUTPUT.PUT_LINE('RECORD NOT FOUND');
END IF;
END;


<-- TRIGGERS USED -->

CREATE TABLE WORK_SAL (WORK_SALARY NUMBER(6))


CREATE TRIGGER PHTRIG BEFORE UPDATE ON WORKERS FOR EACH ROW
BEGIN
INSERT INTO WORK_SAL VALUES (:old.SALARY);
END;

UPDATE WORKERS SET SALARY = SALARY + 1000 WHERE W_ID = 10003;

SELECT * FROM WORKERS

DROP TRIGGER PHTRIG